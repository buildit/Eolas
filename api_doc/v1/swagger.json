{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Eolas",
        "description": "REST based service to provide summarized metrics for visualization and analysis.\n"
    },
    "host": "localhost",
    "basePath": "/v1",
    "schemes": [
        "http"
    ],
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [
        {
            "name": "Ping"
        },
        {
            "name": "Documentation"
        },
        {
            "name": "Project"
        },
        {
            "name": "Demand"
        },
        {
            "name": "Defect"
        },
        {
            "name": "Effort"
        }
    ],
    "paths": {
        "/ping": {
            "get": {
                "tags": [
                    "Ping"
                ],
                "description": "Verifies the service is responsive.  Returns the contents of the deployed service's configuration file.\n",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "App Configuration Data",
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/ping/deep": {
            "get": {
                "tags": [
                    "Ping"
                ],
                "description": "Verifies the service is functional.  Verifies that all external sources are reachable.\n",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "Array of known sources and their status",
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/doc": {
            "get": {
                "tags": [
                    "Documentation"
                ],
                "description": "Serves up the Swagger stype API documentation.\n",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "Swagger Documentation",
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/project": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Provides an array of project data in summary form.\n",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "project",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/project/<name>": {
            "get": {
                "tags": [
                    "Project"
                ],
                "description": "Provides a complete project object.\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "The name of the Project to act upon."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "project",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Project was not found",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Project"
                ],
                "description": "create a project\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "The name of the Project to act upon."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful creation of a project",
                        "schema": {
                            "title": "url",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The project named in the parameter does not match the project name in the body of the request.",
                        "schema": {
                            "title": "url",
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Project already exists.  Duplicates not allowed.",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Project"
                ],
                "description": "Update an existing.\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "The name of the Project to act upon."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "url",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The project named in the parameter does not match the project name in the body of the request.",
                        "schema": {
                            "title": "url",
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Project does not exist, and thus cannot be updated.",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Project"
                ],
                "description": "Provides a complete project object.\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "The name of the Project to act upon."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "OK",
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Project was not found",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/project/<name>/demand": {
            "get": {
                "tags": [
                    "Demand"
                ],
                "description": "Provides the demand resource of a project.\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "The name of the Project to act upon."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "demand",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Project was not found",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/project/<name>/defect": {
            "get": {
                "tags": [
                    "Defect"
                ],
                "description": "Provides the defect resource of a project.\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "The name of the Project to act upon."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "defect",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Project was not found",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/project/<name>/effort": {
            "get": {
                "tags": [
                    "Effort"
                ],
                "description": "Provides the effort resource of a project.\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "The name of the Project to act upon."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "effort",
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Project was not found",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "title": "error",
                            "type": "object"
                        }
                    }
                }
            }
        }
    }
}
